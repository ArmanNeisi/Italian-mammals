# body mass- area relationship:--------------------------------

#libraries:
install.packages("readxl")
library(readxl)
library(ggplot2)
library(dplyr)

#import database:
data <- read_excel("F:/arman/bologna/me/thesis/checlists/final islands.xlsx")
View(data)

# plot in linear model:

ggplot(data, aes(x = area, y = body_mass, color = status)) +
  geom_point(aes(shape = status, fill = status), size = 3, alpha = 0.7) +
  scale_x_log10() +
  scale_y_log10() +
  geom_smooth(method = "lm", se = FALSE) +  # ⬅️ Separate line per group
  scale_color_manual(values = c("Native" = "green", "Alien" = "red", "doubt (type)" = "black")) +
  scale_fill_manual(values = c("Native" = "green", "Alien" = "red", "doubt (type)" = "black")) +
  scale_shape_manual(values = c("Native" = 16, "Alien" = 16, "doubt (type)" = 16)) +
  labs(
    x = "Island Area (km²)",
    y = "Body Mass (gr)",
    title = "Body Mass vs Island Area by Status (trendlines)",
    color = "Status",
    shape = "Status"
  )+
  guides(
    color = guide_legend(override.aes = list(shape = 16)),
    fill = "none"  # optional: hide fill if not useful
  )


#######################
#comparison of LM (linear model) with GLMM:
##to decide between LM vs GLMM for our body mass-island area analysis.

## Linear Model (LM):
m_lm <- lm(log(body_mass) ~ log(area) * status, data = data)

## Mixed Model (GLMM / LMM since body mass is continuous)
install.packages("lme4")
library(lme4)
m_glmm <- lmer(log(body_mass) ~ log(area) * status + (1|species) + (1|island),
               data = data)

## Compare with a Likelihood Ratio Test (LRT)
anova(m_lm, m_glmm)

## Compare using AIC
AIC(m_lm, m_glmm)

## summary:
summary(m_glmm)

################################

#body mass-area relationship using GLMM (Generalized linear mixed model):
## Native vs Alien species

# Load packages:
install.packages("merTools")
library(lme4)
library(lmerTest)   # for p-values
library(merTools)   # for predictions with CIs
library(ggplot2)

# 1. Prepare data:
## log-transform response and predictor
data2$log_body_mass <- log(data2$body_mass)
data2$log_area <- log(data2$area)

# 2. Fit the model (linear model, no random effect)
model1 <- lm(log_body_mass ~ log_area * status, data = data2)

# Look at summary (slopes, interaction, etc.)
summary(model1)

# 3. Build new data for predictions
newdata <- expand.grid(
  log_area = seq(min(data2$log_area), max(data2$log_area), length.out = 100),
  status = levels(data2$status)
)

data2$status <- factor(data2$status)

## Predict with standard errors
preds <- predict(model1, newdata, se.fit = TRUE)

newdata$pred <- preds$fit
newdata$se <- preds$se.fit

# 4. Back-transform predictions:
## from log to original body mass
newdata$pred_body_mass  <- exp(newdata$pred)
newdata$upper_body_mass <- exp(newdata$pred + 1.96 * newdata$se)
newdata$lower_body_mass <- exp(newdata$pred - 1.96 * newdata$se)

## back-transform x (area)
newdata$area <- exp(newdata$log_area)

# 5. Plot
ggplot(data2, aes(x = area, y = body_mass, color = status)) +
  geom_point(size = 2.5, alpha = 0.7) +
  geom_ribbon(data = newdata,
              aes(x = area, ymin = lower_body_mass, ymax = upper_body_mass, fill = status),
              alpha = 0.2, color = NA, inherit.aes = FALSE) +
  geom_line(data = newdata,
            aes(x = area, y = pred_body_mass, color = status),
            linewidth = 1.1, inherit.aes = FALSE) +
  scale_x_continuous(trans = "log10") +
  scale_y_continuous(trans = "log10") +
  labs(title = "Body mass- Island area relationship (GLMM)",
x = "Island area", y = "Body mass", color = "Origin", fill = "Origin") +
  theme_minimal(base_size = 14) +
  theme(legend.position = "top")

