------------# Richness ---------------------


# libraries:
install.packages("readxl")
library(readxl)
library(ggplot2)
library(dplyr)

#import database:
data <- read_excel("F:/arman/bologna/me/thesis/checlists/final islands.xlsx")
View(data)


# raw species–island–status data:

filtered_data <- data %>%
  filter(status %in% c("Native", "Alien"))

richness_by_status <- filtered_data %>%
  group_by(island, area, status) %>%           #Split our data into groups based on island, area and status.
                   
  summarise(richness = n_distinct(species)) %>%            #counts the number of unique species in each group (species richness).      
  ungroup()

View(richness_by_status)


# covert the table to a Wide Format Table:
# make the columns named “Native_richness” and “Alien_richness” per island.

install.packages("tidyr")
library(tidyr)

richness_wide <- richness_by_status %>%
  pivot_wider(                                 
    names_from = status,                      
    values_from = richness,                   
    values_fill = 0             # If an island has no data for one status (e.g., no alien species), fill that cell with 0 instead of NA.                  
  ) %>%
  rename(                                  
    Native_richness = Native,                   
    Alien_richness = Alien                      
  )

View(richness_wide)
write.csv(richness_wide, "Native_vs_Alien_richness_per_island.csv", row.names = FALSE            #save new table to the file


# Visualizing raw patterns:

# make Bar Plot for richness per island

ggplot(richness_by_status, aes(x = reorder(island, area), y = richness, fill = status)) +               # x = reorder(island, area): set the islands (on x-axis) based on their area, ascending
  geom_bar(stat = "identity", position = "dodge") +                       
  labs(
    title = "Native vs Alien Mammal Richness per Island", 
       x = "Island", y = "Species Richness") +
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green"))+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Stacked Bar Chart or proportional bar chart 
## to compute proportion alien/native per island (alien richness ÷ total richness) to highlight invasion intensity

ggplot(richness_by_status, aes(x = reorder(island, area), y = richness, fill = status)) +                      #This shows the total species richness per island, with native and alien stacked.
  geom_bar(stat = "identity") +
  labs(
    x = "Island",
    y = "Species Richness",
    title = "Native vs Alien Species Richness (Stacked)"                          
  ) +
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


# lets sort highest alien proportion first, so invasion hotspots are at the left:
## to calculate alien proportion per island

alien_prop <- richness_wide %>%                               #Now alien_prop has, for each island: “Native_richness”, “Alien_richness”, “total_richness”, “alien_proportion"    # Calculates how many alien species relative to total per island.
  mutate(                                                      
total_richness = Native_richness +Alien_richness,                       # total species richness (native + alien)
alien_proportion = Alien_richness / total_richness)                     # proportion of alien species per island


richness_by_status <- richness_by_status %>%                       # Merging this back into your long-format table (“richness_by_status”), by adding the “alien proportion”.
  left_join(
    alien_prop %>% select(island, alien_proportion),
    by = "island",
    relationship = "many-to-many")


ggplot(richness_by_status,                                    #Plot with islands reordered by alien proportion
       aes(x = reorder(island, -alien_proportion),               #islands ordered by alien proportion (descending)
           y = richness,
           fill = status)) +
  geom_bar(stat = "identity", position = "fill") +  
  labs(
    x = "Island (ordered by alien proportion)",
    y = "Proportion of Species",                                            
    title = "Proportion of Alien vs Native Species per Island"
  ) +
  scale_y_continuous(labels = scales::percent) +                                    #convert y-axis to %
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) 

## in this chart, Bars are ordered by highest alien proportion first (true invasion hotspots on the left).


# absolute alien richness bar chart:
## Reorder islands by absolute alien richness
## to highlight islands that have the largest number of alien species

order_by_alien <- richness_wide %>%                         # Add absolute alien richness into richness_by_status
  arrange(desc(Alien_richness)) %>%
  distinct(island, .keep_all = TRUE) %>%   # keep each island only once
  pull(island)

#	This chart (absolute richness): highlights invasion load
ggplot(richness_by_status,
       aes(x = factor(island, levels = order_by_alien),   # order islands uniquely
           y = richness,
           fill = status)) +
  geom_bar(stat = "identity", position = "stack") +       # stacked absolute counts
  labs(
    x = "Island (ordered by alien richness)",
    y = "Species Richness (count)",
    title = "Alien vs Native Species Richness per Island (Ordered by Alien Richness)"
  ) +
  scale_y_continuous(labels = scales::comma) +            # plain counts on y-axis
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


## Add text labels for Alien richness only
ggplot(richness_by_status,
       aes(x = factor(island, levels = order_by_alien),
           y = richness,
           fill = status)) +
  geom_bar(stat = "identity", position = "stack") +
geom_text(
  data = subset(richness_by_status, status == "Alien"),   # only alien rows
  aes(label = richness),                                  # show alien richness numbers
  position = position_stack(vjust = 1),                 # center within red bar
  color = "black",                                        # text color (contrast on red)
  size = 3
) +
  
  labs(
    x = "Island (ordered by alien richness)",
    y = "Species Richness (count)",
    title = "Alien vs Native Species Richness per Island (Ordered by Alien Richness)"
  ) +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


## Proportion stack bar → where aliens dominate (relative dominance)
## Absolute richness stack bar → where most alien species are concentrated (absolute number of alien species).

## a side-by-side comparison plot:
## Alien proportion (relative dominance) vs. Alien richness (absolute number of alien species):

install.packages("gridExtra")
library(gridExtra)

## --- Chart A: Proportion of Alien vs Native Species per Island ---
plot_prop <- ggplot(richness_by_status,
                    aes(x = reorder(island, -alien_proportion),
                        y = richness,
                        fill = status)) +
  geom_bar(stat = "identity", position = "fill") +
  labs(
    x = "Island (ordered by alien proportion)",
    y = "Proportion of Species",
    title = "Order by Alien Proportion"
  ) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


## --- Chart B: Absolute richness stacked bar chart ---
plot_abs <- ggplot(richness_by_status,
                   aes(x = factor(island, levels = order_by_alien),
                       y = richness,
                       fill = status)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    x = "Island (ordered by alien richness)",
    y = "Species Richness (count)",
    title = "Order by Alien Richness"
  ) +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_manual(values = c("Alien" = "red", "Native" = "green")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


## --- Combine plots side by side using gridExtra ---
grid.arrange(plot_prop, plot_abs, ncol = 2)




# model-based analysis:

## use the fitted model to predict values for natives vs aliens across the area range.
## this tests whether native vs alien richness respond differently to island area.

## move toward a model (generalized linear mixed model (GLMM)):

install.packages("glmmTMB")  
library(glmmTMB)

m <- glmmTMB(richness ~ log(area + 1) * status,                    #Response variable: richness.  #Predictors: log(area + 1).      #richness is predicted from island area (log-transformed), the species status (Native vs alien), and their interaction.
             family = nbinom2,                                      # Here we are using glmmTMB to fit a negative binomial regression. Because species richness is count data and often overdispersed.
             data = richness_by_status)


summary(m)


# Make predictions and compare with data:

library(ggeffects)

pred <- ggpredict(m, terms = c("area [all]", "status"))            # ggpredict() uses our model to calculate predicted richness values for a sequence of island areas, separately for aliens and natives.

plot(pred)                                                       # it gives us values in the original richness scale (counts of species), and also computes confidence intervals.


# overlay our data on this prediction:
## to check how well predictions match your observed richness.
## to combine raw data and predictions to see "How do my model predictions compare with the actual observed richness?"

ggplot() +
  geom_point(data = richness_by_status,
             aes(x = area, y = richness, color = status),
             alpha = 0.6, size = 3) +
  geom_line(data = as.data.frame(pred),
            aes(x = x, y = predicted, color = group),
            size = 1.2) +
  geom_ribbon(data = as.data.frame(pred),
              aes(x = x, ymin = conf.low, ymax = conf.high, fill = group),
              alpha = 0.2) +
  scale_x_log10() +
  labs(x = "Island area (km², log scale)",
       y = "Species richness",
       title = "model: Native and alien Richness across Islands") +
  theme_minimal()


## add names of islands and order islands by area:

richness_by_status$island <- with(richness_by_status, reorder(island, area))

ggplot() +                                                        
  geom_point(data = richness_by_status,                             
             aes(x = area, y = richness, color = status),
             alpha = 0.6, size = 3) +
  geom_line(data = as.data.frame(pred),                              
            aes(x = x, y = predicted, color = group),                          # both the lines and the shaded ribbons are predicted.
            size = 1.2) +
  geom_ribbon(data = as.data.frame(pred),                        
              aes(x = x, ymin = conf.low, ymax = conf.high, fill = group),
              alpha = 0.2) +                         
  scale_x_log10(
    breaks = richness_by_status$area,
    labels = richness_by_status$island
  ) +
  labs(x = "Island (log scale)",
       y = "Species richness",
       title = "model_ Richness across Islands") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


# calculating the SAR slope (z-value):

lm(log(richness) ~ log(area) * status, data = richness_by_status)
summary(model)

##Adjusted R-squared: 0.1825
